<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TorresNG&#39;s Blog</title>
    <link>/</link>
    <description>Recent content on TorresNG&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 Jul 2019 21:18:06 +0800</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>理解MapReduce</title>
      <link>/posts/understanding_mapreduce/</link>
      <pubDate>Mon, 01 Jul 2019 21:18:06 +0800</pubDate>
      
      <guid>/posts/understanding_mapreduce/</guid>
      <description>假如我們有一份很大的數據需要處理，只用單進程單線程需要大量的運行時間，為了減少執行時間，我們可以用多進程多線程并發執行，把一個大的數據划分為獨立較小的數據，然後交給這些進程獨立執行，當這些較小的數據處理完後，我們可以很容易把它們合并成最終結果，這是典型的分治算法，也是MapReduce的主要思想。
當然MapReduce要處理的是大數據的問題，需要解決的事比上面遠大得多。因為單台計算機最後也會出現性能瓶頸，不單擴展單台計算機比較困難且昂貴，而且當單台計算機Crash後，之前所處理的數據全都白費了，所以MapReduce的架構是主要是為了能在多個計算機上實現并行化計算。通過MapReduce可以在大量普通的計算機上實現高性能計算，而且具有可擴展性和高可性的特點。
MapReduce執行部分簡單可以分為單個Master和多個Worker，Master就像公司里的Leader，負責管理，調度和分配任務給小弟，而Worker就是拼了命工作的那些小弟，為了防了單台計算機，這些Worker分布在集群中不同的計算機上執行，當一個計算機Crash後，Master可以將那台計算機所執行的任務分配給其他Worker，這樣實現了高可用。那Master死後怎麼辦？那只能呵呵呵了，當然有各種方式可以解決，其中一種就是通知用戶Master Crash了，讓用戶決定處理方法。
通過MapReduce，我們可以不用處理分布式上遇到的各種問題，MapReduce為我們處理了并行編程中分布存儲、工作調度、負載均衡、容錯處理及網絡通信等複雜問題，我們需要輕鬆愉快的編寫兩個函數即可：map和reduce。map負責把任務分解成多個任務，reduce負責把分解後任務處理的結果汇總起來。需要注意的是，用MapReduce來處理的數據集（或任務）必須具備這樣的特點：待處理的數據集可以分解成計多小的數據集，而且每一個小數據集都可以完全并行地處理。</description>
    </item>
    
    <item>
      <title>Install Hadoop 2.7 in CentOS 7</title>
      <link>/posts/install_hadoop_2.7_in_centos_7/</link>
      <pubDate>Sun, 30 Jun 2019 16:10:21 +0800</pubDate>
      
      <guid>/posts/install_hadoop_2.7_in_centos_7/</guid>
      <description>配置環境 剛裝完 CentOS 7 先連網，然後安裝 wget, net-tools( ifconfig, netstat ) 和 vim 工具
$ sudo dhclient $ sudo yum install -y wget net-tools vim  在 /opt/ 目錄下創建 module 目錄和 software 目錄，然後分配這兩個目錄的權限給自己
$ cd /opt/ $ sudo mkdir module software $ sudo chown torres:torres module/ software/ $ ll total 0 drwxr-xr-x. 2 torres torres 6 Jun 30 04:59 module drwxr-xr-x. 2 torres torres 6 Jun 30 04:59 software  安裝Java JDK 在 software 目錄中下載 Java OpenJDK，解壓到 module 目錄下，然後在 /etc/profile 將 Java 添加到環境變量。需要 OpenJDK 其他版本可以到 這里下載</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Sun, 30 Jun 2019 15:58:59 +0800</pubDate>
      
      <guid>/about/</guid>
      <description>$ echo &amp;quot;Torres Ng, Developer, Love OpenSource dquote&amp;gt; dquote&amp;gt; GitHub: https://github.com/torresng dquote&amp;gt; Email: torresng2684cte@gmail.com dquote&amp;gt; Phone: U2FsdGVkX19QYETNXsNuoYgYtPB8VXUt8FvrjPsk0no=&amp;quot; | cowsay -f dragon -n _____________________________________________________ / Torres Ng, Developer, Love OpenSource \ | | | GitHub: https://github.com/torresng | | Email: torresng2684cte@gmail.com | \ Phone: U2FsdGVkX19QYETNXsNuoYgYtPB8VXUt8FvrjPsk0no= / ----------------------------------------------------- \ / \ //\ \ |\___/| / \// \\ /0 0 \__ / // | \ \ / / \/_/ // | \ \ @_^_@&#39;/ \/_ // | \ \ //_^_/ \/_ // | \ \ ( //) | \/// | \ \ ( / /) _|_ / ) // | \ _\ ( // /) &#39;/,_ _ _/ ( ; -.</description>
    </item>
    
    <item>
      <title>My First Post</title>
      <link>/posts/my-first-post/</link>
      <pubDate>Sun, 30 Jun 2019 15:58:56 +0800</pubDate>
      
      <guid>/posts/my-first-post/</guid>
      <description>由於之前的Blog源碼不見了，所以可以有籍口創建新的Blog了。😂
不管再怎麼累，也要保持學習、折騰和技術分享，把自己學到東西分享出來。</description>
    </item>
    
  </channel>
</rss>